---
version: '3.6'
          
services:
  
  zookeeper:
    image: "confluentinc/cp-zookeeper:latest"
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      
  kafka:
    image: "confluentinc/cp-enterprise-kafka:latest"
    ports:
      - '39092:39092'
      - '9092:9092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://kafka:39092,PLAINTEXT_HOST://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:39092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 30000000
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ksqldb-server:
    image: "confluentinc/ksqldb-server:latest"
    depends_on:
      - kafka
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:39092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: earliest
    ports:
      - 8088:8088

  ksqldb-cli:
    image: "confluentinc/ksqldb-cli:latest"
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    
    
  kafkahq:
    # build:
    #   context: .
    image: tchiotludo/kafkahq
    environment:
      KAFKAHQ_CONFIGURATION: |
        kafkahq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:39092"
    ports:
      - 8080:8080
    depends_on:
      - kafka